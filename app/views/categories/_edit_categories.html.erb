<div id="categories_edition" class="overlay container" >
	<div class="editing_info">
		<h3>Place your categories</h3>
		<div class="delete">
			<i class="icon-trash"></i>
			<p> Drag here to remove</p>
		</div>
		<ul>
			<li>
				<i class="icon-move"></i>
				<h4>Drag and drop</h4>
				<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do consectetur adipiscing</p>
			</li>
			<li>
				<i class="icon-folder-open-alt"></i>
				<h4>Order your categories</h4>
				<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do consectetur adipiscing</p>
			</li>
			<li>
				<i class="icon-archive"></i>
				<h4>Group your knowledge</h4>
				<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do consectetur adipiscing</p>
			</li>
		</ul>



		<div class="actions">
			<button type="button" class="btn btn-for-undo " data-toggle="button"><i class="icon-circle-arrow-left"></i>Cancel</button>
			<button type="button" class="btn btn-primary btn-for-categorize2 " data-toggle="button"><i class="icon-ok-sign"></i>Complete</button>

		</div>
	</div>
	
	<div class="layout_edit">
		<ul class="categories edit_categories"> 
		<% new_categories = subject_categories(profile_or_current_subject, {:scope => scope, :limit => 0}) 

		new_categories.each do |cat|
			if !cat.is_root 
				new_categories.reject!{|e| e == cat}
			end
 		end
		 new_categories.each do |category| %>
		    <%= render :partial => 'categories/category', :locals => { :category => category, :obj_id => category.activity_object.id} %>
		<% end %> 
		</ul>
	</div>
</div>

<script>

// I couldn't make the serialize work, this is suppose to do the work

function getidArray(){
	var s = [];
	$(".overlay .edit_categories .box-item").each(function(key, value){
 		s.push($(value).attr("edit-id"))
	});
	return s;
}

$(document).ready(function(){
	//Array where placed all actions
	movements_array = [];

	//Complete button
	$(".btn-for-categorize2").click(function(){
		if (movements_array.length > 0 || !beginIndex.equals(getidArray())){
			$.ajax({
	            url: '/categories/edit_categories',
	            type: 'POST',
	            dataType: "json",
	            data: { actions: JSON.stringify(movements_array), sort_order: JSON.stringify(getidArray())},
	              success: function(data){
	                //Emulating alert with javascript
	               
	                            
	                            movements_array = []
	                            $("#categories_edition").fadeOut();
	                            $('#flash').hide(); 
	               			 	$("#flash").append('<div class="alert alert-success"><button type="button" class="close" data-dismiss="alert">Ã—</button>Hecho</div>')
	                            .fadeIn()
	                            .delay(6000)
	                            .fadeOut(300, function(){
	                              $('#flash').html("");

	                            });
	                }
	    	});
		}else{
			$("#categories_edition").fadeOut();
		}
  });
	//Cancel button
	$(".btn-for-undo").click(function(){
		$("#categories_edition").fadeOut();
  });
	

	sortable_object = $(".edit_categories");
	$(sortable_object).sortable({
		start:function(event,ui){
			 //Reduces size
			 $(ui.item).width($(ui.item).width()*0.8);
			 $(ui.item).height($(ui.item).height()*0.8);
			 
			 //This is to fix cursor to middle position
			// $(this).sortable("option", "cursorAt", {
	   		//	 left: Math.floor(ui.helper.width()),
	   		//	 top: Math.floor(ui.helper.height())
	 		 //}); 
		},
		tolerance: "intersect"
	}).disableSelection();
 
 //Handler Dropping
	$( ".box-item" ).mouseup(function() {

		//Get dragged object 
  		var dragged = document.elementFromPoint(event.clientX,event.clientY);
  		dragged = $(dragged).closest(".overlay .box-item");
  		//Get whatever is behind
  		dragged.hide();
  		var pre_rec = document.elementFromPoint(event.clientX,event.clientY);
  		dragged.show();
  		var receiver = $(pre_rec).closest(".overlay .box-item");
  		
  		//if dragged onto another object
  		if (receiver.length != 0){
  			var dragged_id = dragged.attr("edit-id");
  			var receiver_id = receiver.attr("edit-id");
  			
  			movements_array.push([dragged_id,receiver_id]);
  			dragged.fadeOut();
  			dragged.remove();
  			//ajax petition
  		}

  		//if dragged into the bin
  		receiver = $(pre_rec).closest(".overlay .delete");
  		if (receiver.length != 0){
  			var dragged_id = dragged.attr("edit-id");
  			movements_array.push([dragged_id,"-1"]);
  			dragged.fadeOut();
  			dragged.remove();
  		}
  		

	});

});

</script>